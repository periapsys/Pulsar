@page "/"
@using PERI.SK.Application.Conversations.Queries
@using PERI.SK.Domain.Interfaces
@using Markdig
@using MediatR
@inject IMediator Mediator
@inject IJSRuntime JS

<PageTitle>Chat with Pulsar</PageTitle>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-12 col-lg-6">
            <!-- Chatbox -->
            <div class="card">
                <div class="card-header text-white">
                    <h5>Chat with Pulsar</h5>
                </div>
                <div class="card-body">
                    <!-- Chatbox container -->
                    <div class="chat-box" id="chatBox">
                        <div class="message bot-msg">
                            <strong>Pulsar:</strong> @((MarkupString)Markdown.ToHtml(greetingMessage))
                        </div>

                        @for (int i = 0; i < Math.Max(botMsgs.Count, userMsgs.Count); i++)
                        {
                            @if (i < userMsgs.Count)
                            {
                                <div class="message user-msg">
                                    <strong>You:</strong> @userMsgs[i]
                                </div>
                            }

                            @if (i < botMsgs.Count)
                            {
                                <div class="message bot-msg">
                                    <strong>Pulsar:</strong> @((MarkupString)Markdown.ToHtml(@botMsgs[i]))
                                </div>
                            }
                        }

                        @if (loading)
                        {
                            <div class="message-loader bot-msg">
                                <strong>Pulsar:  </strong> &nbsp;&nbsp;
                                <div class="loader"></div>
                            </div>
                        }
                    </div>
                </div>

                <EditForm Model="this" OnSubmit="Submit">
                    <div class="card-footer">
                        <!-- Input box -->
                        <div class="input-group">
                            <InputText class="form-control" placeholder="Type a message..." @bind-Value="qry" disabled="@loading" required/>
                            <button class="btn btn-primary" id="sendMessageBtn" type="submit" disabled="@loading">Send</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    List<string> botMsgs = new();
    List<string> userMsgs = new();
    string qry = string.Empty;
    string requestor = Guid.NewGuid().ToString();
    bool loading = false;
    string greetingMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        greetingMessage = await Mediator.Send(new GetPromptQuery { Key = "greeting" });

        var subjects = string.Join(", ", await Mediator.Send(new GetSubjectsQuery()));
        greetingMessage = $"{greetingMessage} **{subjects}**.";
        StateHasChanged();
    }

    async Task Submit()
    {
        loading = true;
        await JS.InvokeVoidAsync("scrollToBottom");
        StateHasChanged();

        if (string.IsNullOrEmpty(qry)) return;

        userMsgs.Add(qry);
        await JS.InvokeVoidAsync("scrollToBottom");
        StateHasChanged();

        var res = await Mediator.Send(new GetResponseQuery { Query = qry, Requestor = requestor });
        botMsgs.Add(res);

        qry = string.Empty;
        loading = false;
        StateHasChanged();
        await JS.InvokeVoidAsync("scrollToBottom");
    }
}
